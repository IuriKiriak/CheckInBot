import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message
from aiogram.filters import Command
from dotenv import load_dotenv
from aiogram.types import ContentType
from aiogram import F
from aiogram.fsm.storage.memory import MemoryStorage

import os

from bot.register import router
from bot.admin import admin

load_dotenv()

TOKEN = os.getenv("TOKENTELEGRAMBOT")

# –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TOKEN)

dp = Dispatcher(storage=MemoryStorage())

dp.include_router(router)
dp.include_router(admin)

print(f"–ü–æ–¥–∫–ª—é—á—ë–Ω–Ω—ã–µ —Ä–æ—É—Ç–µ—Ä—ã: {dp.sub_routers}")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(Command("start"))
async def start_handler(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø Telegram-–±–æ—Ç –Ω–∞ aiogram üöÄ")


# # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /reg_user
# @dp.message(Command("reg_user"))
# async def register_new_user(message: Message):
#     await message.answer("–≤—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏ –Ω–æ–≤–æ–≥–æ —é–∑–µ—Ä–∞")


@dp.message(Command("get_video"))
async def send_video(message: types.Message):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ video_id
    await message.answer("–í–æ—Ç –≤–∏–¥–µ–æ, –∫–æ—Ç–æ—Ä–æ–µ —Ç—ã –∑–∞–ø—Ä–æ—Å–∏–ª!")
    await message.bot.send_video(message.chat.id, video_id)

# # —Ç–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∫—Ä—É–∂–∫–æ–≤ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º–µ
# @dp.message(F.content_type == ContentType.VIDEO_NOTE)
# async def handle_video_note(message: types.Message):
#     await message.answer("–ö—Ä—É–∂–æ–∫ –ø—Ä–∏–Ω—è—Ç!")

# –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è video_id
video_id = ""

@dp.message(F.content_type == ContentType.VIDEO_NOTE)
async def handle_video_note(message: types.Message):
    video_note = message.video_note
    file_id = video_note.file_id
    duration = video_note.duration
    length = video_note.length
    file_size = video_note.file_size
    await message.answer(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∏–¥–µ–æ–∫—Ä—É–∂–∫–µ:\n"
                         f"File ID: {file_id}\n"
                         f"Duration: {duration} —Å–µ–∫.\n"
                         f"Length: {length} –ø–∏–∫—Å.\n"
                         f"File size: {file_size} –±–∞–π—Ç")



# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
# @dp.message(F.content_type == ContentType.TEXT)
# async def handle_text(message: types.Message):
#     user_id = message.from_user.id  # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
#     await message.answer(f"–¢—ã —Å–∫–∞–∑–∞–ª: {message.text}\n–¢–≤–æ–π ID: {user_id}")


# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
async def main():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
